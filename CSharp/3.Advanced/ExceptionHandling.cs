/*
 * Exception Handling:
 *  A good compiler helps us prevent most common mistakes. But it cannot see every error that could occur.
 *  In these cases .NET framework will throw an exception to tell us that something went wrong. With
 *  'Exception Handling' we can print out the actual error message on the console.
 */
using System;

namespace ExceptionHandling
{
    class Program
    {
        static void Main(string[] args)
        {
            //Here we create an object 'integers' that can have an integer array of three spaces.
            int[] integers = new int[3];

            //But now we are trying to use four spaces.
            try
            {
                integers[0] = 20;
                integers[1] = 25;
                integers[2] = 26;
                integers[3] = 30;

                foreach (var NUMBER in integers)
                {
                    Console.WriteLine(NUMBER);
                }
            }
            //With 'Exception Handling' we will catch the error message.
            /*
             * 'System.IndexOutOfRangeException':
             *   Exception is thrown when an attempt is made to access an element of an
             *   array with an index that is outside its bound.
             */
            catch (IndexOutOfRangeException e)
            {
                Console.WriteLine("Index out of range"); //custom error message
                Console.WriteLine(e.Message); //original error message generated by the system
            }
            /*
             * System.Exception:
             *   Throws errors that occurs during the execution of the application.
             */
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            //'finally' block may be required for complex program where garbage collector fails
            //to handle the cleanup.
            finally
            {
                Console.WriteLine("Time to clean up!");
            }
        }
    }
}
